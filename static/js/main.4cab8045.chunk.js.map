{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ABC","SORT_LEN","App","useState","sortType","setSortType","isReversed","setReversed","visibleGoods","goods","preparedGoods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,MACXC,EAAW,MAuBJC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAxBiB,SAACC,EAAOL,EAAUE,GACzC,IAAMI,EAAa,YAAOD,GAa1B,OAXAC,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAEE,cAAcD,GACzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITT,EACKI,EAAcM,UAGhBN,EAMcO,CAAiBlB,EAAiBK,EAAUE,GAEjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAaJ,IAE7BqB,QAAS,kBAAMhB,EAAYL,IAP7B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAaH,IAE7BoB,QAAS,kBAAMhB,EAAYJ,IAP7B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,YAAad,IAEjBe,QAAS,kBAAMd,GAAaD,IAP9B,sBAYEA,GAAcF,IACd,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAY,GACZF,EAAY,KALhB,sBAaJ,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCrGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4cab8045.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ABC = 'abc';\nconst SORT_LEN = 'len';\n\nconst getPreparedGoods = (goods, sortType, isReversed) => {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((a, b) => {\n    switch (sortType) {\n      case SORT_ABC:\n        return a.localeCompare(b);\n      case SORT_LEN:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SORT_ABC },\n          )}\n          onClick={() => setSortType(SORT_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SORT_LEN },\n          )}\n          onClick={() => setSortType(SORT_LEN)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReversed(false);\n              setSortType('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li\n            data-cy=\"Good\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}